
# execution note and other notes
# launch over terminal via
# uvicorn pv_generation_forecast_api:app --reload
# http://127.0.0.1:8000/docs#/default/forecast_forecasting_post

#pip3 install xgboost
#pip3 install uvicorm
#pip3 install fastapi
#save model using xgb_model.save_model("xgboost_model.json")
# model generated by edited the forecasting notebook by Nino https://colab.research.google.com/drive/1UnUFTredCDptvL69dPRmR1iMyRBDduD5?usp=sharing



from fastapi import FastAPI
from pydantic import BaseModel
from joblib import load
import xgboost as xgb

# input request class
class input_forecast_request(BaseModel):
    electricity: float
    is_day: float
    is_day_lag_2: float

# forecast response class
class forecast_response(BaseModel):
    pv_generation_forecast: float
    #probs: dict


app = FastAPI()
#enter the model definiations
model = xgb.XGBRegressor(objective='reg:squarederror',
                             n_estimators=200,
                             subsample=1,
                             learning_rate=0.05,
                             max_depth=2,
                             colsample_bytree=1,
                             min_child_weight=5)

model.load_model("xgboost_model.json")
print('load successfull')




@app.post("/forecasting", response_model=forecast_response)
def forecast(data_inp: input_forecast_request):
    prediction = model.predict([[data_inp.electricity, data_inp.is_day, data_inp.is_day_lag_2]])[0]
    return forecast_response(pv_generation_forecast=prediction)




